#!/usr/bin/env ruby

require "optparse"
require "fileutils"

options = {
  file: "config/snapimage_config.yml",
  size: 10485760,
  force: false
}

optparse = OptionParser.new do |opts|
  opts.banner = "Usage: snapimage_generate_config local_root public_url [options]"

  opts.separator ""
  opts.separator "local_root\tPath to the directory where the images will be stored"

  opts.separator ""
  opts.separator "public_url\tPublic URL to where the images will be accessible"

  opts.separator ""
  opts.separator "Options:"

  opts.on("-f", "--file FILE", "File to generate (Default: config/snapimage_config.yml)") do |file|
    options[:file] = file
  end

  opts.on("-s", "--size SIZE", "Max file size in bytes (Default: 10485760)") do |size|
    options[:size] = size.to_i
  end

  opts.on("--force", "Overwrites the file if it exists") do
    options[:force] = true
  end

  opts.on("-h", "--help", "Display the help screen") do
    puts opts
    exit
  end
end
optparse.parse!

unless ARGV.length == 2
  puts optparse.help
  exit
end

local_root = ARGV[0]
public_url = ARGV[1]

if !options[:force] && File.exists?(options[:file])
  puts "File '#{options[:file]}' already exists. Use --force if you want to overwrite."
  puts "Config file not generated."
  puts
  puts optparse.help
  exit
end

FileUtils.mkdir_p(File.dirname(options[:file]))
File.open(options[:file], "w") do |f|
  f.write(<<-EOF
directory: "#{local_root}"
public_url: "#{public_url}"
max_file_size: #{options[:size]}
EOF
  )
end
puts "Config file generated at '#{options[:file]}'."
